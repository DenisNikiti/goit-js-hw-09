{"mappings":"AACgBA,SAASC,cAAc,SA0BhCC,iBAAiB,UAExB,SAAsBC,GAEpBA,EAAIC,iBACJ,IAAMC,EAAW,IAAIC,SAASH,EAAII,eAM7BF,EAASG,SAAQ,SAACC,EAAOC,G,IA/BvB,IAAIC,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAEpCH,IAEAC,G,IAwCHG,MAAK,SAAAC,G,IAAGC,EAAMD,EAANC,OAAQC,EAAKF,EAALE,MACfC,QAAQC,IAAI,uBAAsCC,OAAbJ,EAAO,QAAYI,OAANH,EAAM,M,IAEzDI,OAAM,SAAAN,G,IAAGC,EAAMD,EAANC,OAAQC,EAAKF,EAALE,MAChBC,QAAQC,IAAI,sBAAmCC,OAAbJ,EAAO,QAAYI,OAANH,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["\n const formEl = document.querySelector(\".form\")\n\n\n  \n\nfunction createPromise(amount, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve()\n    } else {\n      reject()\n    }\n  }\n    )\n    \n  }\n\n\n  \n\n\n\n\n\n\nformEl.addEventListener(\"submit\",onformSubmit)\n\nfunction onformSubmit(evt) {\n  \n  evt.preventDefault()\n  const formdata = new FormData(evt.currentTarget)\n\n  let delay = 0;\n  let step = 0;\n  let amount = 0;\n  \n       formdata.forEach((value, name) => {\n        if (name === \"delay\") {\n          delay = value;\n         }   \n         if (name === \"step\") {\n           step = value;\n         }\n         if (name === \"amount\") {\n           amount = value;\n         }\n  }) \n \n \ncreatePromise(amount,delay)\n  .then(({ amount, delay }) => {\n    console.log(`✅ Fulfilled promise ${amount} in ${delay}ms`);\n  })\n  .catch(({ amount, delay }) => {\n    console.log(`❌ Rejected promise ${amount} in ${delay}ms`);\n  });\n\n\n\n\n\n\n}\n  \n\n\n"],"names":["document","querySelector","addEventListener","evt","preventDefault","formdata","FormData","currentTarget","forEach","value","name","Promise","resolve","reject","Math","random","then","param","amount","delay","console","log","concat","catch"],"version":3,"file":"03-promises.b6d05927.js.map"}