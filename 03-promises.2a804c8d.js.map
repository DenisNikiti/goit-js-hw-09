{"mappings":"AACgBA,SAASC,cAAc,SAiChCC,iBAAiB,UAExB,SAAsBC,G,kBA7BtB,IAAuBC,KA2DTC,EAzDL,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,YAAW,WACDH,GAENF,EAAQH,GAETI,EAAOJ,E,GACPA,E,KAkDVS,MAAK,SAACT,GACLU,QAAQC,IAAI,uBAAqCC,OAAZC,EAAM,QAAYD,OAANZ,EAAM,M,IAGxDc,OAAM,SAACd,GACNU,QAAQC,IAAI,sBAAkCC,OAAZC,EAAM,QAAYD,OAANZ,EAAM,M,IAIpDC,GAASc,C,EAtCbhB,EAAIiB,iBACJ,IAAMC,EAAW,IAAIC,SAASnB,EAAIoB,eAG5BlB,EAAQ,EACVc,EAAO,EACPK,EAAQ,EAGZH,EAASI,SAAQ,SAACC,EAAOC,GACV,UAATA,IACFtB,EAAQqB,GAEG,SAATC,IACFR,EAAOO,GAEI,WAATC,IACFH,EAASE,E,IASX,IAAK,IAAIE,EAAQ,EAAGA,GAASJ,EAAQI,GAAS,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["\n const formEl = document.querySelector(\".form\")\n\n\n  \n\n  \nfunction createPromise(delay) {\n  \n  return new Promise((resovle, reject) => {\n      const shouldResolve = Math.random() > 0.3;         \n            setTimeout(() => {\n                  if (shouldResolve) {\n                        \n                resovle(delay)\n             }\n               reject(delay)\n            }, delay);\n    \n  })\n\n\n\n  }\n\n\n  \n\n\n\n\n\n\n\nformEl.addEventListener(\"submit\",onformSubmit)\n\nfunction onformSubmit(evt) {\n  \n  evt.preventDefault()\n  const formdata = new FormData(evt.currentTarget)\n\n  \n    let delay = 0;\n  let step = 0;\n  let amount =0;\n\n\n  formdata.forEach((value, name) => {\n    if (name === \"delay\") {\n      delay = value;\n    }\n    if (name === \"step\") {\n      step = value;\n    }\n    if (name === \"amount\") {\n      amount = value;\n    }\n\n\n  })\n\n\n  \n\n    for (let index = 1; index <= amount; index += 1) {\n      \ncreatePromise(delay)\n    .then((delay ) => {\n      console.log(`✅ Fulfilled promise ${index} in ${delay}ms`);\n        \n    })\n    .catch((delay ) => {\n      console.log(`❌ Rejected promise ${index} in ${delay}ms`);\n      \n    });\n\n      delay += step\n    }\n\n\n \n \n \n\n}\n\n\n\n\n\n\n "],"names":["document","querySelector","addEventListener","evt","delay","delay1","Promise","resovle","reject","shouldResolve","Math","random","setTimeout","then","console","log","concat","index","catch","step","preventDefault","formdata","FormData","currentTarget","amount","forEach","value","name","index1","_loop"],"version":3,"file":"03-promises.2a804c8d.js.map"}